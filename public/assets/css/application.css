/* Allows changing the box-sizing for a component (and its descendants): */
*, *::before, *::after {
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
}

body {
  margin: 0;
  padding: 0;
  line-height: calc(1em + 0.5rem);
}

canvas, iframe, img, picture, svg, video {
  display: block;
  max-width: 100%;
}

h1, h2, h3, h4, h5, h6, p, li, dt, dd, blockquote {
  overflow-wrap: break-word;
  hyphens: auto;
}

table {
  border-collapse: collapse;
}

input, button, textarea, select {
  font: inherit;
}

* {
  --text-color: #212529;
  --primary-color: #1c45ef;
  --primary-color-hover: #0f25d5;
  --secondary-color: #dde4eb;
  --secondary-color-hover: #c5d1dd;
}

body {
  font-family: Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif;
  color: var(--text-color);
  background: #f3f3f3;
}

pre {
  font-family: "Roboto Mono", "Noto Sans Mono", monospace;
  overflow-y: scroll;
}

code {
  font-family: "Roboto Mono", "Noto Sans Mono", monospace;
}

.badge {
  display: inline-block;
  padding: 0.25em 0.4em;
  line-height: 1;
  border-radius: 4px;
  white-space: nowrap;
  /*vertical-align: baseline;*/
}

.badge-error {
  background: red;
  color: white;
}

.badge-warning {
  background: orange;
  color: white;
}

.badge-normal {
  background: grey;
  color: white;
}

.badge-pending {
  background: violet;
  color: white;
}

.badge-success {
  background: green;
  color: white;
}

.button {
  border: 0;
  border-radius: 4px;
  padding: 8px 12px;
  text-decoration: none !important;
  cursor: pointer;
}

.button-primary {
  color: #fff !important;
  background-color: var(--primary-color) !important;
}
.button-primary:hover {
  color: #fff !important;
  background-color: var(--primary-color-hover) !important;
}

.button-secondary {
  color: var(--text-color) !important;
  background-color: var(--secondary-color) !important;
}
.button-secondary:hover {
  color: var(--text-color) !important;
  background-color: var(--secondary-color-hover) !important;
}

.card {
  margin-bottom: 1rem;
  padding: 1rem;
  font-size: 0.875rem;
  background: #fff;
  box-shadow: 0 0 0 0 rgba(90, 113, 208, 0.11), 0 4px 16px 0 rgba(167, 175, 183, 0.33);
  overflow: auto;
}

.card-title {
  margin-top: 0;
  font-size: 1em;
}

.boxes {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1rem;
  margin-bottom: 1rem;
}

.boxes > .card {
  margin-bottom: 0;
}

.filters {
  display: flex;
  padding-bottom: 1rem;
  align-items: center;
}

ul.inline {
  display: flex;
  gap: 1rem;
  padding-left: 0;
  list-style: none;
}
ul.inline > li {
  display: inline-block;
}

form.inline {
  display: flex;
  gap: 1rem;
}

.page {
  display: flex;
  flex-direction: row;
  width: 100vw;
  min-height: 100vh;
}

.page-sidebar {
  background: var(--primary-color);
  color: #fff;
  width: 170px;
  min-height: 100vh;
}

.page-sidebar-logo {
  display: block;
  padding: 1rem;
  font-size: 1.15rem;
  font-weight: bold;
  text-align: center;
  text-decoration: none;
  color: #fff;
}

.page-sidebar-entries {
  padding-left: 0;
  list-style: none;
  font-weight: bold;
}

.page-sidebar-entry {
  display: block;
  padding: 1rem;
  text-decoration: none;
  color: #fff;
}
.page-sidebar-entry.is-selected, .page-sidebar-entry:hover {
  background-color: var(--primary-color-hover);
}

.page-main {
  display: flex;
  flex-direction: column;
  width: calc(100vw - 170px);
}
.page-main a {
  color: var(--primary-color);
}
.page-main a:hover {
  color: var(--primary-color-hover);
}

.page-menu {
  display: flex;
  flex-direction: row;
  gap: 1rem;
  padding: 1rem;
  background: #fff;
  font-size: 0.875rem;
  align-items: center;
  box-shadow: 0 4px 16px 0 rgba(167, 175, 183, 0.33);
}
.page-menu * {
  margin: 0;
}

.page-content {
  flex: 1;
  display: flex;
  flex-direction: column;
  padding: 1rem;
}

.page-heading {
  flex: 1;
  font-size: 1.25rem;
  font-weight: normal;
}

table {
  width: 100%;
}
table tr {
  border-top: 1px solid #dee2e6;
}
table thead tr:first-child {
  border-top: 0;
}
table th {
  text-align: left;
  font-weight: bold;
}
table th, table td {
  padding: 0.75rem 0.9375rem;
  line-height: 1rem;
}

#terminal {
  flex: 1;
}

.terminal {
  padding: 10px;
}

.xterm .xterm-viewport {
  border-radius: 4px;
}

/**
 * Copyright (c) 2014 The xterm.js authors. All rights reserved.
 * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)
 * https://github.com/chjj/term.js
 * @license MIT
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * Originally forked from (with the author's permission):
 *   Fabrice Bellard's javascript vt100 for jslinux:
 *   http://bellard.org/jslinux/
 *   Copyright (c) 2011 Fabrice Bellard
 *   The original design remains. The terminal itself
 *   has been extended to include xterm CSI codes, among
 *   other features.
 */
/**
 *  Default styles for xterm.js
 */
.xterm {
  cursor: text;
  position: relative;
  user-select: none;
  -ms-user-select: none;
  -webkit-user-select: none;
}

.xterm.focus,
.xterm:focus {
  outline: none;
}

.xterm .xterm-helpers {
  position: absolute;
  top: 0;
  /**
   * The z-index of the helpers must be higher than the canvases in order for
   * IMEs to appear on top.
   */
  z-index: 5;
}

.xterm .xterm-helper-textarea {
  padding: 0;
  border: 0;
  margin: 0;
  /* Move textarea out of the screen to the far left, so that the cursor is not visible */
  position: absolute;
  opacity: 0;
  left: -9999em;
  top: 0;
  width: 0;
  height: 0;
  z-index: -5;
  /** Prevent wrapping so the IME appears against the textarea at the correct position */
  white-space: nowrap;
  overflow: hidden;
  resize: none;
}

.xterm .composition-view {
  /* TODO: Composition position got messed up somewhere */
  background: #000;
  color: #FFF;
  display: none;
  position: absolute;
  white-space: nowrap;
  z-index: 1;
}

.xterm .composition-view.active {
  display: block;
}

.xterm .xterm-viewport {
  /* On OS X this is required in order for the scroll bar to appear fully opaque */
  background-color: #000;
  overflow-y: scroll;
  cursor: default;
  position: absolute;
  right: 0;
  left: 0;
  top: 0;
  bottom: 0;
}

.xterm .xterm-screen {
  position: relative;
}

.xterm .xterm-screen canvas {
  position: absolute;
  left: 0;
  top: 0;
}

.xterm .xterm-scroll-area {
  visibility: hidden;
}

.xterm-char-measure-element {
  display: inline-block;
  visibility: hidden;
  position: absolute;
  top: 0;
  left: -9999em;
  line-height: normal;
}

.xterm.enable-mouse-events {
  /* When mouse events are enabled (eg. tmux), revert to the standard pointer cursor */
  cursor: default;
}

.xterm.xterm-cursor-pointer,
.xterm .xterm-cursor-pointer {
  cursor: pointer;
}

.xterm.column-select.focus {
  /* Column selection mode */
  cursor: crosshair;
}

.xterm .xterm-accessibility,
.xterm .xterm-message {
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  right: 0;
  z-index: 10;
  color: transparent;
  pointer-events: none;
}

.xterm .live-region {
  position: absolute;
  left: -9999px;
  width: 1px;
  height: 1px;
  overflow: hidden;
}

.xterm-dim {
  /* Dim should not apply to background, so the opacity of the foreground color is applied
   * explicitly in the generated class and reset to 1 here */
  opacity: 1 !important;
}

.xterm-underline-1 {
  text-decoration: underline;
}

.xterm-underline-2 {
  text-decoration: double underline;
}

.xterm-underline-3 {
  text-decoration: wavy underline;
}

.xterm-underline-4 {
  text-decoration: dotted underline;
}

.xterm-underline-5 {
  text-decoration: dashed underline;
}

.xterm-overline {
  text-decoration: overline;
}

.xterm-overline.xterm-underline-1 {
  text-decoration: overline underline;
}

.xterm-overline.xterm-underline-2 {
  text-decoration: overline double underline;
}

.xterm-overline.xterm-underline-3 {
  text-decoration: overline wavy underline;
}

.xterm-overline.xterm-underline-4 {
  text-decoration: overline dotted underline;
}

.xterm-overline.xterm-underline-5 {
  text-decoration: overline dashed underline;
}

.xterm-strikethrough {
  text-decoration: line-through;
}

.xterm-screen .xterm-decoration-container .xterm-decoration {
  z-index: 6;
  position: absolute;
}

.xterm-screen .xterm-decoration-container .xterm-decoration.xterm-decoration-top-layer {
  z-index: 7;
}

.xterm-decoration-overview-ruler {
  z-index: 8;
  position: absolute;
  top: 0;
  right: 0;
  pointer-events: none;
}

.xterm-decoration-top {
  z-index: 2;
  position: relative;
}

/*# sourceMappingURL=application.css.map */
